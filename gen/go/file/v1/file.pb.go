// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: file/v1/file.proto

package filev1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DownloadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadFileRequest) Reset() {
	*x = DownloadFileRequest{}
	mi := &file_file_v1_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileRequest) ProtoMessage() {}

func (x *DownloadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileRequest.ProtoReflect.Descriptor instead.
func (*DownloadFileRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{0}
}

func (x *DownloadFileRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DownloadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PresignedUrl  string                 `protobuf:"bytes,1,opt,name=presigned_url,json=presignedUrl,proto3" json:"presigned_url,omitempty"`
	Allowed       bool                   `protobuf:"varint,2,opt,name=allowed,proto3" json:"allowed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadFileResponse) Reset() {
	*x = DownloadFileResponse{}
	mi := &file_file_v1_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileResponse) ProtoMessage() {}

func (x *DownloadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileResponse.ProtoReflect.Descriptor instead.
func (*DownloadFileResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{1}
}

func (x *DownloadFileResponse) GetPresignedUrl() string {
	if x != nil {
		return x.PresignedUrl
	}
	return ""
}

func (x *DownloadFileResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

type ViewFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewFileRequest) Reset() {
	*x = ViewFileRequest{}
	mi := &file_file_v1_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewFileRequest) ProtoMessage() {}

func (x *ViewFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewFileRequest.ProtoReflect.Descriptor instead.
func (*ViewFileRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{2}
}

func (x *ViewFileRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ViewFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Thumbnail     string                 `protobuf:"bytes,2,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	Metadata      *FileMetadata          `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Allowed       bool                   `protobuf:"varint,4,opt,name=allowed,proto3" json:"allowed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewFileResponse) Reset() {
	*x = ViewFileResponse{}
	mi := &file_file_v1_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewFileResponse) ProtoMessage() {}

func (x *ViewFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewFileResponse.ProtoReflect.Descriptor instead.
func (*ViewFileResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{3}
}

func (x *ViewFileResponse) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *ViewFileResponse) GetMetadata() *FileMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ViewFileResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

type PermanentlyDeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermanentlyDeleteFileRequest) Reset() {
	*x = PermanentlyDeleteFileRequest{}
	mi := &file_file_v1_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermanentlyDeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermanentlyDeleteFileRequest) ProtoMessage() {}

func (x *PermanentlyDeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermanentlyDeleteFileRequest.ProtoReflect.Descriptor instead.
func (*PermanentlyDeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{4}
}

func (x *PermanentlyDeleteFileRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PermanentlyDeleteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermanentlyDeleteFileResponse) Reset() {
	*x = PermanentlyDeleteFileResponse{}
	mi := &file_file_v1_file_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermanentlyDeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermanentlyDeleteFileResponse) ProtoMessage() {}

func (x *PermanentlyDeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermanentlyDeleteFileResponse.ProtoReflect.Descriptor instead.
func (*PermanentlyDeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{5}
}

type GetAccountSizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountSizeRequest) Reset() {
	*x = GetAccountSizeRequest{}
	mi := &file_file_v1_file_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountSizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountSizeRequest) ProtoMessage() {}

func (x *GetAccountSizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountSizeRequest.ProtoReflect.Descriptor instead.
func (*GetAccountSizeRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{6}
}

type GetAccountSizeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plan          string                 `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
	CurrentSize   int64                  `protobuf:"varint,2,opt,name=current_size,json=currentSize,proto3" json:"current_size,omitempty"`
	CapacitySize  int64                  `protobuf:"varint,3,opt,name=capacity_size,json=capacitySize,proto3" json:"capacity_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountSizeResponse) Reset() {
	*x = GetAccountSizeResponse{}
	mi := &file_file_v1_file_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountSizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountSizeResponse) ProtoMessage() {}

func (x *GetAccountSizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountSizeResponse.ProtoReflect.Descriptor instead.
func (*GetAccountSizeResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{7}
}

func (x *GetAccountSizeResponse) GetPlan() string {
	if x != nil {
		return x.Plan
	}
	return ""
}

func (x *GetAccountSizeResponse) GetCurrentSize() int64 {
	if x != nil {
		return x.CurrentSize
	}
	return 0
}

func (x *GetAccountSizeResponse) GetCapacitySize() int64 {
	if x != nil {
		return x.CapacitySize
	}
	return 0
}

type PathSegment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // "" for root
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PathSegment) Reset() {
	*x = PathSegment{}
	mi := &file_file_v1_file_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathSegment) ProtoMessage() {}

func (x *PathSegment) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathSegment.ProtoReflect.Descriptor instead.
func (*PathSegment) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{8}
}

func (x *PathSegment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PathSegment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListFilesByParentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParentId      string                 `protobuf:"bytes,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`    // "" = root
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   // optional, default 50, max 100
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"` // opaque offset (base-10 string)
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	SortBy        string                 `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	State         string                 `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesByParentRequest) Reset() {
	*x = ListFilesByParentRequest{}
	mi := &file_file_v1_file_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesByParentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesByParentRequest) ProtoMessage() {}

func (x *ListFilesByParentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesByParentRequest.ProtoReflect.Descriptor instead.
func (*ListFilesByParentRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{9}
}

func (x *ListFilesByParentRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *ListFilesByParentRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListFilesByParentRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListFilesByParentRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListFilesByParentRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListFilesByParentRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type ListFilesByParentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          []*PathSegment         `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	Files         []*FileMetadata        `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	NextPageToken string                 `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"` // "" when no more
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesByParentResponse) Reset() {
	*x = ListFilesByParentResponse{}
	mi := &file_file_v1_file_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesByParentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesByParentResponse) ProtoMessage() {}

func (x *ListFilesByParentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesByParentResponse.ProtoReflect.Descriptor instead.
func (*ListFilesByParentResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{10}
}

func (x *ListFilesByParentResponse) GetPath() []*PathSegment {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *ListFilesByParentResponse) GetFiles() []*FileMetadata {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ListFilesByParentResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateFolderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ParentId      string                 `protobuf:"bytes,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFolderRequest) Reset() {
	*x = CreateFolderRequest{}
	mi := &file_file_v1_file_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFolderRequest) ProtoMessage() {}

func (x *CreateFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFolderRequest.ProtoReflect.Descriptor instead.
func (*CreateFolderRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{11}
}

func (x *CreateFolderRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateFolderRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

type CreateFolderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Folder        *FileMetadata          `protobuf:"bytes,1,opt,name=folder,proto3" json:"folder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFolderResponse) Reset() {
	*x = CreateFolderResponse{}
	mi := &file_file_v1_file_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFolderResponse) ProtoMessage() {}

func (x *CreateFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFolderResponse.ProtoReflect.Descriptor instead.
func (*CreateFolderResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{12}
}

func (x *CreateFolderResponse) GetFolder() *FileMetadata {
	if x != nil {
		return x.Folder
	}
	return nil
}

type InitiateMultipartUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ContentType   string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	ParentId      string                 `protobuf:"bytes,4,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitiateMultipartUploadRequest) Reset() {
	*x = InitiateMultipartUploadRequest{}
	mi := &file_file_v1_file_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitiateMultipartUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateMultipartUploadRequest) ProtoMessage() {}

func (x *InitiateMultipartUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateMultipartUploadRequest.ProtoReflect.Descriptor instead.
func (*InitiateMultipartUploadRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{13}
}

func (x *InitiateMultipartUploadRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InitiateMultipartUploadRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *InitiateMultipartUploadRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *InitiateMultipartUploadRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

type InitiateMultipartUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	UploadId      string                 `protobuf:"bytes,2,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitiateMultipartUploadResponse) Reset() {
	*x = InitiateMultipartUploadResponse{}
	mi := &file_file_v1_file_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitiateMultipartUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateMultipartUploadResponse) ProtoMessage() {}

func (x *InitiateMultipartUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateMultipartUploadResponse.ProtoReflect.Descriptor instead.
func (*InitiateMultipartUploadResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{14}
}

func (x *InitiateMultipartUploadResponse) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *InitiateMultipartUploadResponse) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *InitiateMultipartUploadResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetPresignedUploadPartURLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	PartNumber    int32                  `protobuf:"varint,2,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	ExpiresSecs   int32                  `protobuf:"varint,3,opt,name=expires_secs,json=expiresSecs,proto3" json:"expires_secs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPresignedUploadPartURLRequest) Reset() {
	*x = GetPresignedUploadPartURLRequest{}
	mi := &file_file_v1_file_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPresignedUploadPartURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPresignedUploadPartURLRequest) ProtoMessage() {}

func (x *GetPresignedUploadPartURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPresignedUploadPartURLRequest.ProtoReflect.Descriptor instead.
func (*GetPresignedUploadPartURLRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{15}
}

func (x *GetPresignedUploadPartURLRequest) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *GetPresignedUploadPartURLRequest) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *GetPresignedUploadPartURLRequest) GetExpiresSecs() int32 {
	if x != nil {
		return x.ExpiresSecs
	}
	return 0
}

type GetPresignedUploadPartURLResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PresignedUrl  string                 `protobuf:"bytes,1,opt,name=presigned_url,json=presignedUrl,proto3" json:"presigned_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPresignedUploadPartURLResponse) Reset() {
	*x = GetPresignedUploadPartURLResponse{}
	mi := &file_file_v1_file_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPresignedUploadPartURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPresignedUploadPartURLResponse) ProtoMessage() {}

func (x *GetPresignedUploadPartURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPresignedUploadPartURLResponse.ProtoReflect.Descriptor instead.
func (*GetPresignedUploadPartURLResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{16}
}

func (x *GetPresignedUploadPartURLResponse) GetPresignedUrl() string {
	if x != nil {
		return x.PresignedUrl
	}
	return ""
}

type CompleteMultipartUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Parts         []*CompletedPart       `protobuf:"bytes,2,rep,name=parts,proto3" json:"parts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteMultipartUploadRequest) Reset() {
	*x = CompleteMultipartUploadRequest{}
	mi := &file_file_v1_file_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteMultipartUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMultipartUploadRequest) ProtoMessage() {}

func (x *CompleteMultipartUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMultipartUploadRequest.ProtoReflect.Descriptor instead.
func (*CompleteMultipartUploadRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{17}
}

func (x *CompleteMultipartUploadRequest) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *CompleteMultipartUploadRequest) GetParts() []*CompletedPart {
	if x != nil {
		return x.Parts
	}
	return nil
}

type CompletedPart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartNumber    int32                  `protobuf:"varint,1,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	Etag          string                 `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompletedPart) Reset() {
	*x = CompletedPart{}
	mi := &file_file_v1_file_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompletedPart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletedPart) ProtoMessage() {}

func (x *CompletedPart) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletedPart.ProtoReflect.Descriptor instead.
func (*CompletedPart) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{18}
}

func (x *CompletedPart) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *CompletedPart) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

type CompleteMultipartUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *FileMetadata          `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteMultipartUploadResponse) Reset() {
	*x = CompleteMultipartUploadResponse{}
	mi := &file_file_v1_file_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteMultipartUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMultipartUploadResponse) ProtoMessage() {}

func (x *CompleteMultipartUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMultipartUploadResponse.ProtoReflect.Descriptor instead.
func (*CompleteMultipartUploadResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{19}
}

func (x *CompleteMultipartUploadResponse) GetFile() *FileMetadata {
	if x != nil {
		return x.File
	}
	return nil
}

type AbortMultipartUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbortMultipartUploadRequest) Reset() {
	*x = AbortMultipartUploadRequest{}
	mi := &file_file_v1_file_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbortMultipartUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortMultipartUploadRequest) ProtoMessage() {}

func (x *AbortMultipartUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortMultipartUploadRequest.ProtoReflect.Descriptor instead.
func (*AbortMultipartUploadRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{20}
}

func (x *AbortMultipartUploadRequest) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

type AbortMultipartUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbortMultipartUploadResponse) Reset() {
	*x = AbortMultipartUploadResponse{}
	mi := &file_file_v1_file_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbortMultipartUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortMultipartUploadResponse) ProtoMessage() {}

func (x *AbortMultipartUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortMultipartUploadResponse.ProtoReflect.Descriptor instead.
func (*AbortMultipartUploadResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{21}
}

type ToggleFavoriteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToggleFavoriteRequest) Reset() {
	*x = ToggleFavoriteRequest{}
	mi := &file_file_v1_file_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToggleFavoriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleFavoriteRequest) ProtoMessage() {}

func (x *ToggleFavoriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleFavoriteRequest.ProtoReflect.Descriptor instead.
func (*ToggleFavoriteRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{22}
}

func (x *ToggleFavoriteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ToggleFavoriteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToggleFavoriteResponse) Reset() {
	*x = ToggleFavoriteResponse{}
	mi := &file_file_v1_file_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToggleFavoriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleFavoriteResponse) ProtoMessage() {}

func (x *ToggleFavoriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleFavoriteResponse.ProtoReflect.Descriptor instead.
func (*ToggleFavoriteResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{23}
}

func (x *ToggleFavoriteResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type DeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	mi := &file_file_v1_file_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteFileRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileResponse) Reset() {
	*x = DeleteFileResponse{}
	mi := &file_file_v1_file_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileResponse) ProtoMessage() {}

func (x *DeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileResponse.ProtoReflect.Descriptor instead.
func (*DeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteFileResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type RestoreFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreFileRequest) Reset() {
	*x = RestoreFileRequest{}
	mi := &file_file_v1_file_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreFileRequest) ProtoMessage() {}

func (x *RestoreFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreFileRequest.ProtoReflect.Descriptor instead.
func (*RestoreFileRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{26}
}

func (x *RestoreFileRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RestoreFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreFileResponse) Reset() {
	*x = RestoreFileResponse{}
	mi := &file_file_v1_file_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreFileResponse) ProtoMessage() {}

func (x *RestoreFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreFileResponse.ProtoReflect.Descriptor instead.
func (*RestoreFileResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{27}
}

func (x *RestoreFileResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type RenameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenameRequest) Reset() {
	*x = RenameRequest{}
	mi := &file_file_v1_file_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameRequest) ProtoMessage() {}

func (x *RenameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameRequest.ProtoReflect.Descriptor instead.
func (*RenameRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{28}
}

func (x *RenameRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RenameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenameResponse) Reset() {
	*x = RenameResponse{}
	mi := &file_file_v1_file_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameResponse) ProtoMessage() {}

func (x *RenameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameResponse.ProtoReflect.Descriptor instead.
func (*RenameResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{29}
}

func (x *RenameResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type MarkAsIsPublicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsIsPublicRequest) Reset() {
	*x = MarkAsIsPublicRequest{}
	mi := &file_file_v1_file_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsIsPublicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsIsPublicRequest) ProtoMessage() {}

func (x *MarkAsIsPublicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsIsPublicRequest.ProtoReflect.Descriptor instead.
func (*MarkAsIsPublicRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{30}
}

func (x *MarkAsIsPublicRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MarkAsIsPublicResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsIsPublicResponse) Reset() {
	*x = MarkAsIsPublicResponse{}
	mi := &file_file_v1_file_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsIsPublicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsIsPublicResponse) ProtoMessage() {}

func (x *MarkAsIsPublicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsIsPublicResponse.ProtoReflect.Descriptor instead.
func (*MarkAsIsPublicResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{31}
}

func (x *MarkAsIsPublicResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *MarkAsIsPublicResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type MarkAsNotIsPublicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsNotIsPublicRequest) Reset() {
	*x = MarkAsNotIsPublicRequest{}
	mi := &file_file_v1_file_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsNotIsPublicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsNotIsPublicRequest) ProtoMessage() {}

func (x *MarkAsNotIsPublicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsNotIsPublicRequest.ProtoReflect.Descriptor instead.
func (*MarkAsNotIsPublicRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{32}
}

func (x *MarkAsNotIsPublicRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MarkAsNotIsPublicResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsNotIsPublicResponse) Reset() {
	*x = MarkAsNotIsPublicResponse{}
	mi := &file_file_v1_file_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsNotIsPublicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsNotIsPublicResponse) ProtoMessage() {}

func (x *MarkAsNotIsPublicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsNotIsPublicResponse.ProtoReflect.Descriptor instead.
func (*MarkAsNotIsPublicResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{33}
}

func (x *MarkAsNotIsPublicResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type AddAccessEmailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email         []string               `protobuf:"bytes,2,rep,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAccessEmailRequest) Reset() {
	*x = AddAccessEmailRequest{}
	mi := &file_file_v1_file_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAccessEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccessEmailRequest) ProtoMessage() {}

func (x *AddAccessEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccessEmailRequest.ProtoReflect.Descriptor instead.
func (*AddAccessEmailRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{34}
}

func (x *AddAccessEmailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddAccessEmailRequest) GetEmail() []string {
	if x != nil {
		return x.Email
	}
	return nil
}

type AddAccessEmailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAccessEmailResponse) Reset() {
	*x = AddAccessEmailResponse{}
	mi := &file_file_v1_file_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAccessEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccessEmailResponse) ProtoMessage() {}

func (x *AddAccessEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccessEmailResponse.ProtoReflect.Descriptor instead.
func (*AddAccessEmailResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{35}
}

func (x *AddAccessEmailResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *AddAccessEmailResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type RemoveSingleAccessEmailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSingleAccessEmailRequest) Reset() {
	*x = RemoveSingleAccessEmailRequest{}
	mi := &file_file_v1_file_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSingleAccessEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSingleAccessEmailRequest) ProtoMessage() {}

func (x *RemoveSingleAccessEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSingleAccessEmailRequest.ProtoReflect.Descriptor instead.
func (*RemoveSingleAccessEmailRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{36}
}

func (x *RemoveSingleAccessEmailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RemoveSingleAccessEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type RemoveSingleAccessEmailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSingleAccessEmailResponse) Reset() {
	*x = RemoveSingleAccessEmailResponse{}
	mi := &file_file_v1_file_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSingleAccessEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSingleAccessEmailResponse) ProtoMessage() {}

func (x *RemoveSingleAccessEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSingleAccessEmailResponse.ProtoReflect.Descriptor instead.
func (*RemoveSingleAccessEmailResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{37}
}

func (x *RemoveSingleAccessEmailResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type RemoveAllAccessEmailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAllAccessEmailsRequest) Reset() {
	*x = RemoveAllAccessEmailsRequest{}
	mi := &file_file_v1_file_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAllAccessEmailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAllAccessEmailsRequest) ProtoMessage() {}

func (x *RemoveAllAccessEmailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAllAccessEmailsRequest.ProtoReflect.Descriptor instead.
func (*RemoveAllAccessEmailsRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{38}
}

func (x *RemoveAllAccessEmailsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveAllAccessEmailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAllAccessEmailsResponse) Reset() {
	*x = RemoveAllAccessEmailsResponse{}
	mi := &file_file_v1_file_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAllAccessEmailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAllAccessEmailsResponse) ProtoMessage() {}

func (x *RemoveAllAccessEmailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAllAccessEmailsResponse.ProtoReflect.Descriptor instead.
func (*RemoveAllAccessEmailsResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{39}
}

func (x *RemoveAllAccessEmailsResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type GetAccessStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccessStatusRequest) Reset() {
	*x = GetAccessStatusRequest{}
	mi := &file_file_v1_file_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccessStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccessStatusRequest) ProtoMessage() {}

func (x *GetAccessStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccessStatusRequest.ProtoReflect.Descriptor instead.
func (*GetAccessStatusRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{40}
}

func (x *GetAccessStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAccessStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Emails        []string               `protobuf:"bytes,1,rep,name=emails,proto3" json:"emails,omitempty"`
	IsPublic      bool                   `protobuf:"varint,2,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccessStatusResponse) Reset() {
	*x = GetAccessStatusResponse{}
	mi := &file_file_v1_file_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccessStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccessStatusResponse) ProtoMessage() {}

func (x *GetAccessStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccessStatusResponse.ProtoReflect.Descriptor instead.
func (*GetAccessStatusResponse) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{41}
}

func (x *GetAccessStatusResponse) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *GetAccessStatusResponse) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

type FileMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId       string                 `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ContentType   string                 `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"` // empty for folders
	Size          int64                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`                                 // 0 for folders
	IsPublic      bool                   `protobuf:"varint,6,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	ShareId       string                 `protobuf:"bytes,7,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	Type          string                 `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`                         // "file" or "folder"
	ParentId      string                 `protobuf:"bytes,12,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"` // blank / "" = root
	IsFavorite    bool                   `protobuf:"varint,13,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"`
	Thumbnails    []*Thumbnail           `protobuf:"bytes,14,rep,name=thumbnails,proto3" json:"thumbnails,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileMetadata) Reset() {
	*x = FileMetadata{}
	mi := &file_file_v1_file_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetadata) ProtoMessage() {}

func (x *FileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetadata.ProtoReflect.Descriptor instead.
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{42}
}

func (x *FileMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FileMetadata) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *FileMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileMetadata) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *FileMetadata) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileMetadata) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *FileMetadata) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

func (x *FileMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FileMetadata) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *FileMetadata) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *FileMetadata) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FileMetadata) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *FileMetadata) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

func (x *FileMetadata) GetThumbnails() []*Thumbnail {
	if x != nil {
		return x.Thumbnails
	}
	return nil
}

type Thumbnail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Lable         string                 `protobuf:"bytes,2,opt,name=lable,proto3" json:"lable,omitempty"`
	Width         int32                  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32                  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Format        string                 `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	Size          int32                  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Url           string                 `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Thumbnail) Reset() {
	*x = Thumbnail{}
	mi := &file_file_v1_file_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Thumbnail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thumbnail) ProtoMessage() {}

func (x *Thumbnail) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thumbnail.ProtoReflect.Descriptor instead.
func (*Thumbnail) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{43}
}

func (x *Thumbnail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Thumbnail) GetLable() string {
	if x != nil {
		return x.Lable
	}
	return ""
}

func (x *Thumbnail) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Thumbnail) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Thumbnail) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Thumbnail) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Thumbnail) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_file_v1_file_proto protoreflect.FileDescriptor

const file_file_v1_file_proto_rawDesc = "" +
	"\n" +
	"\x12file/v1/file.proto\x12\afile.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bbuf/validate/validate.proto\"%\n" +
	"\x13DownloadFileRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"U\n" +
	"\x14DownloadFileResponse\x12#\n" +
	"\rpresigned_url\x18\x01 \x01(\tR\fpresignedUrl\x12\x18\n" +
	"\aallowed\x18\x02 \x01(\bR\aallowed\"!\n" +
	"\x0fViewFileRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"}\n" +
	"\x10ViewFileResponse\x12\x1c\n" +
	"\tthumbnail\x18\x02 \x01(\tR\tthumbnail\x121\n" +
	"\bmetadata\x18\x03 \x01(\v2\x15.file.v1.FileMetadataR\bmetadata\x12\x18\n" +
	"\aallowed\x18\x04 \x01(\bR\aallowed\".\n" +
	"\x1cPermanentlyDeleteFileRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x1f\n" +
	"\x1dPermanentlyDeleteFileResponse\"\x17\n" +
	"\x15GetAccountSizeRequest\"t\n" +
	"\x16GetAccountSizeResponse\x12\x12\n" +
	"\x04plan\x18\x01 \x01(\tR\x04plan\x12!\n" +
	"\fcurrent_size\x18\x02 \x01(\x03R\vcurrentSize\x12#\n" +
	"\rcapacity_size\x18\x03 \x01(\x03R\fcapacitySize\"1\n" +
	"\vPathSegment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\xb6\x01\n" +
	"\x18ListFilesByParentRequest\x12\x1b\n" +
	"\tparent_id\x18\x01 \x01(\tR\bparentId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12\x17\n" +
	"\asort_by\x18\x05 \x01(\tR\x06sortBy\x12\x14\n" +
	"\x05state\x18\x06 \x01(\tR\x05state\"\x9a\x01\n" +
	"\x19ListFilesByParentResponse\x12(\n" +
	"\x04path\x18\x01 \x03(\v2\x14.file.v1.PathSegmentR\x04path\x12+\n" +
	"\x05files\x18\x02 \x03(\v2\x15.file.v1.FileMetadataR\x05files\x12&\n" +
	"\x0fnext_page_token\x18\x03 \x01(\tR\rnextPageToken\"O\n" +
	"\x13CreateFolderRequest\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12\x1b\n" +
	"\tparent_id\x18\x02 \x01(\tR\bparentId\"E\n" +
	"\x14CreateFolderResponse\x12-\n" +
	"\x06folder\x18\x01 \x01(\v2\x15.file.v1.FileMetadataR\x06folder\"\x9a\x01\n" +
	"\x1eInitiateMultipartUploadRequest\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x1b\n" +
	"\x04size\x18\x03 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x04size\x12\x1b\n" +
	"\tparent_id\x18\x04 \x01(\tR\bparentId\"i\n" +
	"\x1fInitiateMultipartUploadResponse\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x1b\n" +
	"\tupload_id\x18\x02 \x01(\tR\buploadId\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\"\x9e\x01\n" +
	" GetPresignedUploadPartURLRequest\x12$\n" +
	"\tupload_id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\buploadId\x12(\n" +
	"\vpart_number\x18\x02 \x01(\x05B\a\xbaH\x04\x1a\x02 \x00R\n" +
	"partNumber\x12*\n" +
	"\fexpires_secs\x18\x03 \x01(\x05B\a\xbaH\x04\x1a\x02 \x00R\vexpiresSecs\"H\n" +
	"!GetPresignedUploadPartURLResponse\x12#\n" +
	"\rpresigned_url\x18\x01 \x01(\tR\fpresignedUrl\"~\n" +
	"\x1eCompleteMultipartUploadRequest\x12$\n" +
	"\tupload_id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\buploadId\x126\n" +
	"\x05parts\x18\x02 \x03(\v2\x16.file.v1.CompletedPartB\b\xbaH\x05\x92\x01\x02\b\x01R\x05parts\"V\n" +
	"\rCompletedPart\x12(\n" +
	"\vpart_number\x18\x01 \x01(\x05B\a\xbaH\x04\x1a\x02 \x00R\n" +
	"partNumber\x12\x1b\n" +
	"\x04etag\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04etag\"L\n" +
	"\x1fCompleteMultipartUploadResponse\x12)\n" +
	"\x04file\x18\x01 \x01(\v2\x15.file.v1.FileMetadataR\x04file\"C\n" +
	"\x1bAbortMultipartUploadRequest\x12$\n" +
	"\tupload_id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\buploadId\"\x1e\n" +
	"\x1cAbortMultipartUploadResponse\"'\n" +
	"\x15ToggleFavoriteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"7\n" +
	"\x16ToggleFavoriteResponse\x12\x1d\n" +
	"\n" +
	"is_success\x18\x01 \x01(\bR\tisSuccess\"#\n" +
	"\x11DeleteFileRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"3\n" +
	"\x12DeleteFileResponse\x12\x1d\n" +
	"\n" +
	"is_success\x18\x01 \x01(\bR\tisSuccess\"$\n" +
	"\x12RestoreFileRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"4\n" +
	"\x13RestoreFileResponse\x12\x1d\n" +
	"\n" +
	"is_success\x18\x01 \x01(\bR\tisSuccess\"\x1f\n" +
	"\rRenameRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"/\n" +
	"\x0eRenameResponse\x12\x1d\n" +
	"\n" +
	"is_success\x18\x01 \x01(\bR\tisSuccess\"'\n" +
	"\x15MarkAsIsPublicRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"I\n" +
	"\x16MarkAsIsPublicResponse\x12\x1d\n" +
	"\n" +
	"is_success\x18\x01 \x01(\bR\tisSuccess\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\"*\n" +
	"\x18MarkAsNotIsPublicRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\":\n" +
	"\x19MarkAsNotIsPublicResponse\x12\x1d\n" +
	"\n" +
	"is_success\x18\x01 \x01(\bR\tisSuccess\"=\n" +
	"\x15AddAccessEmailRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05email\x18\x02 \x03(\tR\x05email\"I\n" +
	"\x16AddAccessEmailResponse\x12\x1d\n" +
	"\n" +
	"is_success\x18\x01 \x01(\bR\tisSuccess\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\"F\n" +
	"\x1eRemoveSingleAccessEmailRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\"@\n" +
	"\x1fRemoveSingleAccessEmailResponse\x12\x1d\n" +
	"\n" +
	"is_success\x18\x01 \x01(\bR\tisSuccess\".\n" +
	"\x1cRemoveAllAccessEmailsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\">\n" +
	"\x1dRemoveAllAccessEmailsResponse\x12\x1d\n" +
	"\n" +
	"is_success\x18\x01 \x01(\bR\tisSuccess\"(\n" +
	"\x16GetAccessStatusRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"N\n" +
	"\x17GetAccessStatusResponse\x12\x16\n" +
	"\x06emails\x18\x01 \x03(\tR\x06emails\x12\x1b\n" +
	"\tis_public\x18\x02 \x01(\bR\bisPublic\"\xf3\x03\n" +
	"\fFileMetadata\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bowner_id\x18\x02 \x01(\tR\aownerId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x03R\x04size\x12\x1b\n" +
	"\tis_public\x18\x06 \x01(\bR\bisPublic\x12\x19\n" +
	"\bshare_id\x18\a \x01(\tR\ashareId\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x129\n" +
	"\n" +
	"deleted_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tdeletedAt\x12\x12\n" +
	"\x04type\x18\v \x01(\tR\x04type\x12\x1b\n" +
	"\tparent_id\x18\f \x01(\tR\bparentId\x12\x1f\n" +
	"\vis_favorite\x18\r \x01(\bR\n" +
	"isFavorite\x122\n" +
	"\n" +
	"thumbnails\x18\x0e \x03(\v2\x12.file.v1.ThumbnailR\n" +
	"thumbnails\"\x9d\x01\n" +
	"\tThumbnail\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05lable\x18\x02 \x01(\tR\x05lable\x12\x14\n" +
	"\x05width\x18\x03 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\x05R\x06height\x12\x16\n" +
	"\x06format\x18\x05 \x01(\tR\x06format\x12\x12\n" +
	"\x04size\x18\x06 \x01(\x05R\x04size\x12\x10\n" +
	"\x03url\x18\b \x01(\tR\x03url2\x81\x0e\n" +
	"\vFileService\x12l\n" +
	"\x17InitiateMultipartUpload\x12'.file.v1.InitiateMultipartUploadRequest\x1a(.file.v1.InitiateMultipartUploadResponse\x12r\n" +
	"\x19GetPresignedUploadPartURL\x12).file.v1.GetPresignedUploadPartURLRequest\x1a*.file.v1.GetPresignedUploadPartURLResponse\x12l\n" +
	"\x17CompleteMultipartUpload\x12'.file.v1.CompleteMultipartUploadRequest\x1a(.file.v1.CompleteMultipartUploadResponse\x12c\n" +
	"\x14AbortMultipartUpload\x12$.file.v1.AbortMultipartUploadRequest\x1a%.file.v1.AbortMultipartUploadResponse\x12K\n" +
	"\fCreateFolder\x12\x1c.file.v1.CreateFolderRequest\x1a\x1d.file.v1.CreateFolderResponse\x12Z\n" +
	"\x11ListFilesByParent\x12!.file.v1.ListFilesByParentRequest\x1a\".file.v1.ListFilesByParentResponse\x12Q\n" +
	"\x0eToggleFavorite\x12\x1e.file.v1.ToggleFavoriteRequest\x1a\x1f.file.v1.ToggleFavoriteResponse\x12E\n" +
	"\n" +
	"DeleteFile\x12\x1a.file.v1.DeleteFileRequest\x1a\x1b.file.v1.DeleteFileResponse\x12H\n" +
	"\vRestoreFile\x12\x1b.file.v1.RestoreFileRequest\x1a\x1c.file.v1.RestoreFileResponse\x129\n" +
	"\x06Rename\x12\x16.file.v1.RenameRequest\x1a\x17.file.v1.RenameResponse\x12Q\n" +
	"\x0eMarkAsIsPublic\x12\x1e.file.v1.MarkAsIsPublicRequest\x1a\x1f.file.v1.MarkAsIsPublicResponse\x12Z\n" +
	"\x11MarkAsNotIsPublic\x12!.file.v1.MarkAsNotIsPublicRequest\x1a\".file.v1.MarkAsNotIsPublicResponse\x12Q\n" +
	"\x0eAddAccessEmail\x12\x1e.file.v1.AddAccessEmailRequest\x1a\x1f.file.v1.AddAccessEmailResponse\x12T\n" +
	"\x0fGetAccessStatus\x12\x1f.file.v1.GetAccessStatusRequest\x1a .file.v1.GetAccessStatusResponse\x12l\n" +
	"\x17RemoveSingleAccessEmail\x12'.file.v1.RemoveSingleAccessEmailRequest\x1a(.file.v1.RemoveSingleAccessEmailResponse\x12f\n" +
	"\x15RemoveAllAccessEmails\x12%.file.v1.RemoveAllAccessEmailsRequest\x1a&.file.v1.RemoveAllAccessEmailsResponse\x12Q\n" +
	"\x0eGetAccountSize\x12\x1e.file.v1.GetAccountSizeRequest\x1a\x1f.file.v1.GetAccountSizeResponse\x12f\n" +
	"\x15PermanentlyDeleteFile\x12%.file.v1.PermanentlyDeleteFileRequest\x1a&.file.v1.PermanentlyDeleteFileResponse\x12?\n" +
	"\bViewFile\x12\x18.file.v1.ViewFileRequest\x1a\x19.file.v1.ViewFileResponse\x12K\n" +
	"\fDownloadFile\x12\x1c.file.v1.DownloadFileRequest\x1a\x1d.file.v1.DownloadFileResponseB\xa9\x01\n" +
	"\x19com.samarthasthan.file.v1B\tFileProtoP\x01ZDgithub.com/samarthasthan/cloud-storage-commons/gen/go/file/v1;filev1\xa2\x02\x03FXX\xaa\x02\aFile.V1\xca\x02\aFile\\V1\xe2\x02\x13File\\V1\\GPBMetadata\xea\x02\bFile::V1b\x06proto3"

var (
	file_file_v1_file_proto_rawDescOnce sync.Once
	file_file_v1_file_proto_rawDescData []byte
)

func file_file_v1_file_proto_rawDescGZIP() []byte {
	file_file_v1_file_proto_rawDescOnce.Do(func() {
		file_file_v1_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_v1_file_proto_rawDesc), len(file_file_v1_file_proto_rawDesc)))
	})
	return file_file_v1_file_proto_rawDescData
}

var file_file_v1_file_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_file_v1_file_proto_goTypes = []any{
	(*DownloadFileRequest)(nil),               // 0: file.v1.DownloadFileRequest
	(*DownloadFileResponse)(nil),              // 1: file.v1.DownloadFileResponse
	(*ViewFileRequest)(nil),                   // 2: file.v1.ViewFileRequest
	(*ViewFileResponse)(nil),                  // 3: file.v1.ViewFileResponse
	(*PermanentlyDeleteFileRequest)(nil),      // 4: file.v1.PermanentlyDeleteFileRequest
	(*PermanentlyDeleteFileResponse)(nil),     // 5: file.v1.PermanentlyDeleteFileResponse
	(*GetAccountSizeRequest)(nil),             // 6: file.v1.GetAccountSizeRequest
	(*GetAccountSizeResponse)(nil),            // 7: file.v1.GetAccountSizeResponse
	(*PathSegment)(nil),                       // 8: file.v1.PathSegment
	(*ListFilesByParentRequest)(nil),          // 9: file.v1.ListFilesByParentRequest
	(*ListFilesByParentResponse)(nil),         // 10: file.v1.ListFilesByParentResponse
	(*CreateFolderRequest)(nil),               // 11: file.v1.CreateFolderRequest
	(*CreateFolderResponse)(nil),              // 12: file.v1.CreateFolderResponse
	(*InitiateMultipartUploadRequest)(nil),    // 13: file.v1.InitiateMultipartUploadRequest
	(*InitiateMultipartUploadResponse)(nil),   // 14: file.v1.InitiateMultipartUploadResponse
	(*GetPresignedUploadPartURLRequest)(nil),  // 15: file.v1.GetPresignedUploadPartURLRequest
	(*GetPresignedUploadPartURLResponse)(nil), // 16: file.v1.GetPresignedUploadPartURLResponse
	(*CompleteMultipartUploadRequest)(nil),    // 17: file.v1.CompleteMultipartUploadRequest
	(*CompletedPart)(nil),                     // 18: file.v1.CompletedPart
	(*CompleteMultipartUploadResponse)(nil),   // 19: file.v1.CompleteMultipartUploadResponse
	(*AbortMultipartUploadRequest)(nil),       // 20: file.v1.AbortMultipartUploadRequest
	(*AbortMultipartUploadResponse)(nil),      // 21: file.v1.AbortMultipartUploadResponse
	(*ToggleFavoriteRequest)(nil),             // 22: file.v1.ToggleFavoriteRequest
	(*ToggleFavoriteResponse)(nil),            // 23: file.v1.ToggleFavoriteResponse
	(*DeleteFileRequest)(nil),                 // 24: file.v1.DeleteFileRequest
	(*DeleteFileResponse)(nil),                // 25: file.v1.DeleteFileResponse
	(*RestoreFileRequest)(nil),                // 26: file.v1.RestoreFileRequest
	(*RestoreFileResponse)(nil),               // 27: file.v1.RestoreFileResponse
	(*RenameRequest)(nil),                     // 28: file.v1.RenameRequest
	(*RenameResponse)(nil),                    // 29: file.v1.RenameResponse
	(*MarkAsIsPublicRequest)(nil),             // 30: file.v1.MarkAsIsPublicRequest
	(*MarkAsIsPublicResponse)(nil),            // 31: file.v1.MarkAsIsPublicResponse
	(*MarkAsNotIsPublicRequest)(nil),          // 32: file.v1.MarkAsNotIsPublicRequest
	(*MarkAsNotIsPublicResponse)(nil),         // 33: file.v1.MarkAsNotIsPublicResponse
	(*AddAccessEmailRequest)(nil),             // 34: file.v1.AddAccessEmailRequest
	(*AddAccessEmailResponse)(nil),            // 35: file.v1.AddAccessEmailResponse
	(*RemoveSingleAccessEmailRequest)(nil),    // 36: file.v1.RemoveSingleAccessEmailRequest
	(*RemoveSingleAccessEmailResponse)(nil),   // 37: file.v1.RemoveSingleAccessEmailResponse
	(*RemoveAllAccessEmailsRequest)(nil),      // 38: file.v1.RemoveAllAccessEmailsRequest
	(*RemoveAllAccessEmailsResponse)(nil),     // 39: file.v1.RemoveAllAccessEmailsResponse
	(*GetAccessStatusRequest)(nil),            // 40: file.v1.GetAccessStatusRequest
	(*GetAccessStatusResponse)(nil),           // 41: file.v1.GetAccessStatusResponse
	(*FileMetadata)(nil),                      // 42: file.v1.FileMetadata
	(*Thumbnail)(nil),                         // 43: file.v1.Thumbnail
	(*timestamppb.Timestamp)(nil),             // 44: google.protobuf.Timestamp
}
var file_file_v1_file_proto_depIdxs = []int32{
	42, // 0: file.v1.ViewFileResponse.metadata:type_name -> file.v1.FileMetadata
	8,  // 1: file.v1.ListFilesByParentResponse.path:type_name -> file.v1.PathSegment
	42, // 2: file.v1.ListFilesByParentResponse.files:type_name -> file.v1.FileMetadata
	42, // 3: file.v1.CreateFolderResponse.folder:type_name -> file.v1.FileMetadata
	18, // 4: file.v1.CompleteMultipartUploadRequest.parts:type_name -> file.v1.CompletedPart
	42, // 5: file.v1.CompleteMultipartUploadResponse.file:type_name -> file.v1.FileMetadata
	44, // 6: file.v1.FileMetadata.created_at:type_name -> google.protobuf.Timestamp
	44, // 7: file.v1.FileMetadata.updated_at:type_name -> google.protobuf.Timestamp
	44, // 8: file.v1.FileMetadata.deleted_at:type_name -> google.protobuf.Timestamp
	43, // 9: file.v1.FileMetadata.thumbnails:type_name -> file.v1.Thumbnail
	13, // 10: file.v1.FileService.InitiateMultipartUpload:input_type -> file.v1.InitiateMultipartUploadRequest
	15, // 11: file.v1.FileService.GetPresignedUploadPartURL:input_type -> file.v1.GetPresignedUploadPartURLRequest
	17, // 12: file.v1.FileService.CompleteMultipartUpload:input_type -> file.v1.CompleteMultipartUploadRequest
	20, // 13: file.v1.FileService.AbortMultipartUpload:input_type -> file.v1.AbortMultipartUploadRequest
	11, // 14: file.v1.FileService.CreateFolder:input_type -> file.v1.CreateFolderRequest
	9,  // 15: file.v1.FileService.ListFilesByParent:input_type -> file.v1.ListFilesByParentRequest
	22, // 16: file.v1.FileService.ToggleFavorite:input_type -> file.v1.ToggleFavoriteRequest
	24, // 17: file.v1.FileService.DeleteFile:input_type -> file.v1.DeleteFileRequest
	26, // 18: file.v1.FileService.RestoreFile:input_type -> file.v1.RestoreFileRequest
	28, // 19: file.v1.FileService.Rename:input_type -> file.v1.RenameRequest
	30, // 20: file.v1.FileService.MarkAsIsPublic:input_type -> file.v1.MarkAsIsPublicRequest
	32, // 21: file.v1.FileService.MarkAsNotIsPublic:input_type -> file.v1.MarkAsNotIsPublicRequest
	34, // 22: file.v1.FileService.AddAccessEmail:input_type -> file.v1.AddAccessEmailRequest
	40, // 23: file.v1.FileService.GetAccessStatus:input_type -> file.v1.GetAccessStatusRequest
	36, // 24: file.v1.FileService.RemoveSingleAccessEmail:input_type -> file.v1.RemoveSingleAccessEmailRequest
	38, // 25: file.v1.FileService.RemoveAllAccessEmails:input_type -> file.v1.RemoveAllAccessEmailsRequest
	6,  // 26: file.v1.FileService.GetAccountSize:input_type -> file.v1.GetAccountSizeRequest
	4,  // 27: file.v1.FileService.PermanentlyDeleteFile:input_type -> file.v1.PermanentlyDeleteFileRequest
	2,  // 28: file.v1.FileService.ViewFile:input_type -> file.v1.ViewFileRequest
	0,  // 29: file.v1.FileService.DownloadFile:input_type -> file.v1.DownloadFileRequest
	14, // 30: file.v1.FileService.InitiateMultipartUpload:output_type -> file.v1.InitiateMultipartUploadResponse
	16, // 31: file.v1.FileService.GetPresignedUploadPartURL:output_type -> file.v1.GetPresignedUploadPartURLResponse
	19, // 32: file.v1.FileService.CompleteMultipartUpload:output_type -> file.v1.CompleteMultipartUploadResponse
	21, // 33: file.v1.FileService.AbortMultipartUpload:output_type -> file.v1.AbortMultipartUploadResponse
	12, // 34: file.v1.FileService.CreateFolder:output_type -> file.v1.CreateFolderResponse
	10, // 35: file.v1.FileService.ListFilesByParent:output_type -> file.v1.ListFilesByParentResponse
	23, // 36: file.v1.FileService.ToggleFavorite:output_type -> file.v1.ToggleFavoriteResponse
	25, // 37: file.v1.FileService.DeleteFile:output_type -> file.v1.DeleteFileResponse
	27, // 38: file.v1.FileService.RestoreFile:output_type -> file.v1.RestoreFileResponse
	29, // 39: file.v1.FileService.Rename:output_type -> file.v1.RenameResponse
	31, // 40: file.v1.FileService.MarkAsIsPublic:output_type -> file.v1.MarkAsIsPublicResponse
	33, // 41: file.v1.FileService.MarkAsNotIsPublic:output_type -> file.v1.MarkAsNotIsPublicResponse
	35, // 42: file.v1.FileService.AddAccessEmail:output_type -> file.v1.AddAccessEmailResponse
	41, // 43: file.v1.FileService.GetAccessStatus:output_type -> file.v1.GetAccessStatusResponse
	37, // 44: file.v1.FileService.RemoveSingleAccessEmail:output_type -> file.v1.RemoveSingleAccessEmailResponse
	39, // 45: file.v1.FileService.RemoveAllAccessEmails:output_type -> file.v1.RemoveAllAccessEmailsResponse
	7,  // 46: file.v1.FileService.GetAccountSize:output_type -> file.v1.GetAccountSizeResponse
	5,  // 47: file.v1.FileService.PermanentlyDeleteFile:output_type -> file.v1.PermanentlyDeleteFileResponse
	3,  // 48: file.v1.FileService.ViewFile:output_type -> file.v1.ViewFileResponse
	1,  // 49: file.v1.FileService.DownloadFile:output_type -> file.v1.DownloadFileResponse
	30, // [30:50] is the sub-list for method output_type
	10, // [10:30] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_file_v1_file_proto_init() }
func file_file_v1_file_proto_init() {
	if File_file_v1_file_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_v1_file_proto_rawDesc), len(file_file_v1_file_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_v1_file_proto_goTypes,
		DependencyIndexes: file_file_v1_file_proto_depIdxs,
		MessageInfos:      file_file_v1_file_proto_msgTypes,
	}.Build()
	File_file_v1_file_proto = out.File
	file_file_v1_file_proto_goTypes = nil
	file_file_v1_file_proto_depIdxs = nil
}
