syntax = "proto3";

package file.v1;

import "google/protobuf/timestamp.proto";
import "buf/validate/validate.proto";

option go_package = "github.com/samarthasthan/cloud-storage-commons/gen/go/file/v1;filev1";

service FileService {
  rpc InitiateMultipartUpload (InitiateMultipartUploadRequest) returns (InitiateMultipartUploadResponse);
  rpc GetPresignedUploadPartURL (GetPresignedUploadPartURLRequest) returns (GetPresignedUploadPartURLResponse);
  rpc CompleteMultipartUpload (CompleteMultipartUploadRequest) returns (CompleteMultipartUploadResponse);
  rpc AbortMultipartUpload (AbortMultipartUploadRequest) returns (AbortMultipartUploadResponse);
  rpc CreateFolder(CreateFolderRequest) returns (CreateFolderResponse);
  rpc ListFilesByParent (ListFilesByParentRequest) returns (ListFilesByParentResponse);
  rpc ToggleFavorite(ToggleFavoriteRequest) returns (ToggleFavoriteResponse);
  rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse);
  rpc Rename(RenameRequest) returns (RenameResponse);
  rpc MarkAsIsPublic(MarkAsIsPublicRequest) returns (MarkAsIsPublicResponse);
  rpc MarkAsNotIsPublic(MarkAsNotIsPublicRequest) returns (MarkAsNotIsPublicResponse);
  rpc AddAccessEmail(AddAccessEmailRequest) returns (AddAccessEmailResponse);
  rpc GetAccessStatus(GetAccessStatusRequest) returns (GetAccessStatusResponse);
  rpc RemoveSingleAccessEmail(RemoveSingleAccessEmailRequest) returns (RemoveSingleAccessEmailResponse);
  rpc RemoveAllAccessEmails(RemoveAllAccessEmailsRequest) returns (RemoveAllAccessEmailsResponse);
}

message PathSegment {
  string id   = 1;  // "" for root
  string name = 2;
}

message ListFilesByParentRequest {
  string parent_id   = 1;    // "" = root
  int32  page_size   = 2;    // optional, default 50, max 100
  string page_token  = 3;    // opaque offset (base-10 string)
  string type        = 4;
  string sort_by     = 5;
  string state       = 6;
}

message ListFilesByParentResponse {
  repeated PathSegment path           = 1;
  repeated FileMetadata files         = 2;
  string next_page_token              = 3; // "" when no more
}

message CreateFolderRequest {
  string name = 1 [(buf.validate.field).string.min_len = 1];
  string parent_id = 2; // optional
}

message CreateFolderResponse {
  FileMetadata folder = 1;
}

message InitiateMultipartUploadRequest {
  string name         = 1 [(buf.validate.field).string.min_len = 1];
  string content_type = 2;
  int64  size         = 3 [(buf.validate.field).int64.gt = 0];
  string parent_id    = 4;
}

message InitiateMultipartUploadResponse {
  string file_id   = 1;
  string upload_id = 2;
  string key       = 3;
}

message GetPresignedUploadPartURLRequest {
  string upload_id    = 1 [(buf.validate.field).string.min_len = 1];
  int32  part_number  = 2 [(buf.validate.field).int32.gt = 0];
  int32  expires_secs = 3 [(buf.validate.field).int32.gt = 0];
}

message GetPresignedUploadPartURLResponse {
  string presigned_url = 1;
}

message CompleteMultipartUploadRequest {
  string                     upload_id = 1 [(buf.validate.field).string.min_len = 1];
  repeated CompletedPart parts      = 2 [(buf.validate.field).repeated.min_items = 1];
}

message CompletedPart {
  int32  part_number = 1 [(buf.validate.field).int32.gt = 0];
  string etag        = 2 [(buf.validate.field).string.min_len = 1];
}

message CompleteMultipartUploadResponse {
  FileMetadata file = 1;
}

message AbortMultipartUploadRequest {
  string upload_id = 1 [(buf.validate.field).string.min_len = 1];
}

message AbortMultipartUploadResponse {}

message ToggleFavoriteRequest {
   string id           = 1;
}

message ToggleFavoriteResponse {
   bool is_success = 1;
}

message DeleteFileRequest {
  string id           = 1;
}

message DeleteFileResponse {
   bool is_success = 1;
}

message RenameRequest {
  string id           = 1;
}

message RenameResponse {
   bool is_success = 1;
}

message MarkAsIsPublicRequest {
  string id           = 1;
}

message MarkAsIsPublicResponse {
   bool is_success = 1;
   string url = 2;
}

message MarkAsNotIsPublicRequest {
  string id           = 1;
}

message MarkAsNotIsPublicResponse {
   bool is_success = 1;
}

message AddAccessEmailRequest {
  string id           = 1;
  repeated string email = 2;
}

message AddAccessEmailResponse {
   bool is_success = 1;
   string url = 2;
}

message RemoveSingleAccessEmailRequest {
  string id           = 1;
  string email = 2;
}

message RemoveSingleAccessEmailResponse {
   bool is_success = 1;
}

message RemoveAllAccessEmailsRequest {
  string id           = 1;
}

message RemoveAllAccessEmailsResponse {
   bool is_success = 1;
}

message GetAccessStatusRequest {
  string id = 1;
}

message GetAccessStatusResponse {
  repeated string emails = 1;
  bool is_public = 2;
}


message FileMetadata {
  string id           = 1;
  string owner_id     = 2;
  string name         = 3;
  string content_type = 4;  // empty for folders
  int64  size         = 5;  // 0 for folders
  bool   is_public    = 6;
  string share_id     = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
  google.protobuf.Timestamp deleted_at = 10;
  string type         = 11; // "file" or "folder"
  string parent_id    = 12; // blank / "" = root
  bool is_favorite    = 13;
}

