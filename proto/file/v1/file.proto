syntax = "proto3";

package file.v1;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/samarthasthan/cloud-storage-commons/gen/go/auth/v1;filev1";

service FileService {
  // Upload: returns a presigned URL for file upload
  rpc GetUploadURL(GetUploadURLRequest) returns (GetUploadURLResponse);

  // List all files uploaded by current user
  rpc ListFiles(ListFilesRequest) returns (ListFilesResponse);

  // Get file metadata
  rpc GetFile(GetFileRequest) returns (GetFileResponse);

  // Update file metadata
  rpc UpdateFile(UpdateFileRequest) returns (UpdateFileResponse);

  // Delete file
  rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse);

  // Get presigned download URL
  rpc GetDownloadURL(GetDownloadURLRequest) returns (GetDownloadURLResponse);

  // Public sharing
  rpc ShareFile(ShareFileRequest) returns (ShareFileResponse);
  rpc RevokePublicShare(RevokePublicShareRequest) returns (RevokePublicShareResponse);

  // Access public file metadata and download
  rpc GetPublicFile(GetPublicFileRequest) returns (GetPublicFileResponse);
  rpc GetPublicDownloadURL(GetPublicDownloadURLRequest) returns (GetPublicDownloadURLResponse);

  // Access control (private sharing)
  rpc ShareWithUser(ShareWithUserRequest) returns (ShareWithUserResponse);
  rpc ListFilePermissions(ListFilePermissionsRequest) returns (ListFilePermissionsResponse);
  rpc RevokeUserAccess(RevokeUserAccessRequest) returns (RevokeUserAccessResponse);
}

// === Messages ===

message FileMetadata {
  string id = 1;
  string name = 2;
  string content_type = 3;
  int64 size = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  bool is_public = 7;
}

message GetUploadURLRequest {
  string file_name = 1 [(buf.validate.field).string.min_len = 1];
  string content_type = 2;
  int64 size = 3 [(buf.validate.field).int64.gt = 0];
}

message GetUploadURLResponse {
  string upload_url = 1;
  string file_id = 2;
}

message ListFilesRequest {}

message ListFilesResponse {
  repeated FileMetadata files = 1;
}

message GetFileRequest {
  string id = 1 [(buf.validate.field).string.min_len = 1];
}

message GetFileResponse {
  FileMetadata file = 1;
}

message UpdateFileRequest {
  string id = 1 [(buf.validate.field).string.min_len = 1];
  string new_name = 2 [(buf.validate.field).string.min_len = 1];
}

message UpdateFileResponse {
  FileMetadata file = 1;
}

message DeleteFileRequest {
  string id = 1 [(buf.validate.field).string.min_len = 1];
}

message DeleteFileResponse {}

message GetDownloadURLRequest {
  string id = 1 [(buf.validate.field).string.min_len = 1];
}

message GetDownloadURLResponse {
  string download_url = 1;
}

// === Public Sharing ===

message ShareFileRequest {
  string id = 1 [(buf.validate.field).string.min_len = 1];
}

message ShareFileResponse {
  string share_id = 1;
  string public_url = 2;
}

message RevokePublicShareRequest {
  string id = 1 [(buf.validate.field).string.min_len = 1];
}

message RevokePublicShareResponse {}

message GetPublicFileRequest {
  string share_id = 1 [(buf.validate.field).string.min_len = 1];
}

message GetPublicFileResponse {
  FileMetadata file = 1;
}

message GetPublicDownloadURLRequest {
  string share_id = 1 [(buf.validate.field).string.min_len = 1];
}

message GetPublicDownloadURLResponse {
  string download_url = 1;
}

// === Private Sharing (Access Control) ===

message ShareWithUserRequest {
  string id = 1 [(buf.validate.field).string.min_len = 1];
  string email = 2 [(buf.validate.field).string.email = true];
}

message ShareWithUserResponse {}

message ListFilePermissionsRequest {
  string id = 1 [(buf.validate.field).string.min_len = 1];
}

message ListFilePermissionsResponse {
  repeated FileAccessEntry access_list = 1;
}

message FileAccessEntry {
  string user_id = 1;
  string email = 2;
}

message RevokeUserAccessRequest {
  string id = 1 [(buf.validate.field).string.min_len = 1];
  string user_id = 2 [(buf.validate.field).string.min_len = 1];
}

message RevokeUserAccessResponse {}
